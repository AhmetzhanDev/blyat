//
import { Client, Message } from 'whatsapp-web.js'
import { UserModel } from '../models/User'
import { CompanySettings } from '../models/CompanySettings'
import { TelegramService } from '../telegram/telegramClient'
import { WhatsappChat } from '../models/WhatsappChat'
import { WhatsappMessage } from '../models/WhatsappMessage'
import { Types } from 'mongoose'

export class MessageMonitor {
	private static instance: MessageMonitor
	private activeTimers: Map<string, NodeJS.Timeout>
	private telegramService: TelegramService

	private constructor() {
		this.activeTimers = new Map()
		this.telegramService = TelegramService.getInstance()
	}

	public static getInstance(): MessageMonitor {
		if (!MessageMonitor.instance) {
			MessageMonitor.instance = new MessageMonitor()
		}
		return MessageMonitor.instance
	}

	public async sendTelegramMessage(companyId: Types.ObjectId, message: string) {
		if (!this.telegramService) {
			throw new Error('Telegram —Å–µ—Ä–≤–∏—Å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
		}

		const isConnected = await this.telegramService.isConnected()
		if (!isConnected) {
			await this.telegramService.initialize()
		}

		const company = await CompanySettings.findById(companyId)
		if (!company) {
			console.log(`–ö–û–ú–ü–ê–ù–ò–Ø ${companyId} –ù–ï –ù–ê–ô–î–ï–ù–ê `)
			return
		}
		await this.telegramService.sendMessage(
			`-${company.telegramGroupId}`,
			message
		)
		console.log(
			`[${new Date().toISOString()}] ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram`
		)
	}

	public async handleMessage(message: Message): Promise<void> {
		try {
			const timestamp = new Date().toISOString()
			console.log(`[${timestamp}] üì± –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: ${message.from}`)
			console.log(`[${timestamp}] üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: "${message.body}"`)

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∏—Å—Ö–æ–¥—è—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
			if (message.fromMe) {
				console.log(`[${timestamp}] üë§ –ü–æ–ª—É—á–µ–Ω–æ –∏—Å—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`)
				return
			}

			if (message.from === 'status@broadcast') {
				console.log(`[${timestamp}] üì± –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`)
				return
			}

			const clientCleanPhoneNumber = message.from
				.replace('@c.us', '')
				.replace('+', '')
				.replace(/\D/g, '')
			const cleanPhoneNumber = message.to
				.replace('@c.us', '')
				.replace('+', '')
				.replace(/\D/g, '')
			console.log(`[${timestamp}] üîç –ò—â–µ–º –Ω–æ–º–µ—Ä –≤ –±–∞–∑–µ: ${cleanPhoneNumber}`)

			// –ù–∞—Ö–æ–¥–∏–º –∫–æ–º–ø–∞–Ω–∏—é –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
			const company = await CompanySettings.findOne({
				phoneNumber: cleanPhoneNumber,
			})
			if (!company) {
				console.log(
					`[${timestamp}] ‚ùå –ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –Ω–æ–º–µ—Ä–∞: ${cleanPhoneNumber}`
				)
				return // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
			}
			console.log(`[${timestamp}] ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–æ–º–ø–∞–Ω–∏—è:`, company)

			// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —á–∞—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			let chat = await WhatsappChat.findOne({ chatId: clientCleanPhoneNumber })

			console.log(chat)
			if (!chat) {
				console.log(
					`[${timestamp}] ‚ùå –ß–∞—Ç —Å –Ω–æ–º–µ—Ä–æ–º ${clientCleanPhoneNumber} –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π`
				)

				// –ï—Å–ª–∏ —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
				try {
					chat = new WhatsappChat({
						companyId: company._id,
						chatId: clientCleanPhoneNumber,
					})
					await chat.save() // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —á–∞—Ç
					console.log(
						`[${timestamp}] üìù –ù–æ–≤—ã–π —á–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è: ${clientCleanPhoneNumber}`
					)
				} catch (error) {
					console.error(
						`[${timestamp}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞:`,
						error
					)
					return // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–∞—Ç
				}
			} else {
				console.log(`[${timestamp}] ‚úÖ –ß–∞—Ç –Ω–∞–π–¥–µ–Ω:`, chat)
			}

			// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
			const whatsappMessage = new WhatsappMessage({
				isEcho: message.fromMe,
				text: message.body,
				whatsappChatId: chat._id,
				isClosed: false, // –°–¥–µ–ª–∫–∞ –µ—â–µ –Ω–µ –∑–∞–∫—Ä—ã—Ç–∞
			})

			try {
				await whatsappMessage.save() // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑–µ
				console.log(`[${timestamp}] ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:`, whatsappMessage)
			} catch (error) {
				console.error(
					`[${timestamp}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:`,
					error
				)
				return // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
			}

			// –õ–æ–≥–∏–∫–∞ —Å —Ç–∞–π–º–µ—Ä–æ–º –æ—Å—Ç–∞–µ—Ç—Å—è
			if (this.activeTimers.has(message.to)) {
				console.log(`[${timestamp}] üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è ${message.to}`)
				clearTimeout(this.activeTimers.get(message.to))
			}

			// –û—Ç–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–µ—Ä –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞
			if (this.activeTimers.has(message.from)) {
				console.log(`[${timestamp}] üõë –û—Ç–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è ${message.from}`)
				clearTimeout(this.activeTimers.get(message.from))
				this.activeTimers.delete(message.from)
				console.log(`[${timestamp}] ‚úÖ –¢–∞–π–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω`)
			}

			// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä
			const timer = setTimeout(async () => {
				const currentTimestamp = new Date().toISOString()
				console.log(
					`[${currentTimestamp}] ‚ö†Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ –¥–ª—è ${message.to} (—á–∞—Ç ${clientCleanPhoneNumber})`
				)

				if (company.telegramGroupId) {
					try {
						const reminderMessage = `‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! ‚ö†Ô∏è\n\n–í WhatsApp-—á–∞—Ç–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ ${company.managerResponse} –º–∏–Ω—É—Ç!\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: https://wa.me/${clientCleanPhoneNumber}`

						if (!this.telegramService) {
							throw new Error('Telegram —Å–µ—Ä–≤–∏—Å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
						}

						const isConnected = await this.telegramService.isConnected()
						if (!isConnected) {
							await this.telegramService.initialize()
						}

						await this.telegramService.sendMessage(
							`-${company.telegramGroupId}`,
							reminderMessage
						)
						console.log(
							`[${currentTimestamp}] ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram`
						)
					} catch (error) {
						console.error(
							`[${currentTimestamp}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:`,
							error
						)
					}
				}
			}, (company?.managerResponse || 5) * 60 * 1000)

			this.activeTimers.set(message.from, timer)
			console.log(
				`[${timestamp}] ‚è≥ –ó–∞–ø—É—â–µ–Ω —Ç–∞–π–º–µ—Ä –Ω–∞ ${company.managerResponse} –º–∏–Ω—É—Ç –¥–ª—è ${message.to} (—á–∞—Ç ${message.from})`
			)
		} catch (error) {
			console.error(
				`[${new Date().toISOString()}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:`,
				error
			)
		}
	}

	public async handleAdminMessage(message: Message): Promise<void> {
		try {
			const timestamp = new Date().toISOString()
			console.log(`[${timestamp}] üì± –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: ${message.from}`)
			console.log(`[${timestamp}] üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: "${message.body}"`)

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∏—Å—Ö–æ–¥—è—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
			if (message.fromMe) {
				console.log(`[${timestamp}] üë§ –ü–æ–ª—É—á–µ–Ω–æ –∏—Å—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`)
				return
			}

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–æ–¥–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è Telegram
			const isTelegramCode = message.body.match(/^\d{5}$/)
			if (isTelegramCode) {
				console.log(
					`[${timestamp}] üîë –û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è Telegram: ${message.body}`
				)
				console.log(`[${timestamp}] üîë –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ Telegram –∫–æ–¥...`)

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Telegram —Å–µ—Ä–≤–∏—Å–∞
				const isConnected = await this.telegramService.isConnected()
				console.log(
					`[${timestamp}] üîë Telegram —Å–µ—Ä–≤–∏—Å –ø–æ–¥–∫–ª—é—á–µ–Ω: ${isConnected}`
				)

				if (!isConnected) {
					console.log(
						`[${timestamp}] üîë –ü—Ä–æ–±—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Telegram —Å–µ—Ä–≤–∏—Å...`
					)
					await this.telegramService.initialize()
				}

				console.log(`[${timestamp}] üîë –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–¥ –≤ Telegram —Å–µ—Ä–≤–∏—Å...`)
				this.telegramService.setVerificationCode(message.body)
				console.log(`[${timestamp}] üîë –ö–æ–¥ –ø–µ—Ä–µ–¥–∞–Ω –≤ Telegram —Å–µ—Ä–≤–∏—Å`)
				return
			}
		} catch (error) {
			console.error(
				`[${new Date().toISOString()}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:`,
				error
			)
		}
	}

	public async handleOutgoingMessage(message: Message): Promise<void> {
		try {
			const timestamp = new Date().toISOString()
			console.log(`[${timestamp}] üì§ –ò—Å—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:`)
			console.log(`[${timestamp}] üìù –¢–µ–∫—Å—Ç: "${message.body}"`)
			console.log(`[${timestamp}] üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${message.to}`)

			const cleanPhoneNumber = message.from.replace(/\D/g, '')
			const clientCleanPhoneNumber = message.to.replace(/\D/g, '')
			// –ù–∞—Ö–æ–¥–∏–º –∫–æ–º–ø–∞–Ω–∏—é –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
			const company = await CompanySettings.findOne({
				phoneNumber: cleanPhoneNumber,
			})
			if (!company) {
				console.log(
					`[${timestamp}] ‚ùå –ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –Ω–æ–º–µ—Ä–∞: ${cleanPhoneNumber}`
				)
				return // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
			}
			console.log(`[${timestamp}] ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–æ–º–ø–∞–Ω–∏—è:`, company)

			// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —á–∞—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
			let chat = await WhatsappChat.findOne({ chatId: clientCleanPhoneNumber })

			console.log(chat)
			if (!chat) {
				console.log(
					`[${timestamp}] ‚ùå –ß–∞—Ç —Å –Ω–æ–º–µ—Ä–æ–º ${clientCleanPhoneNumber} –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π`
				)

				// –ï—Å–ª–∏ —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
				try {
					chat = new WhatsappChat({
						companyId: company._id,
						chatId: clientCleanPhoneNumber,
					})
					await chat.save() // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —á–∞—Ç
					console.log(
						`[${timestamp}] üìù –ù–æ–≤—ã–π —á–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è: ${clientCleanPhoneNumber}`
					)
				} catch (error) {
					console.error(
						`[${timestamp}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞:`,
						error
					)
					return // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–∞—Ç
				}
			} else {
				console.log(`[${timestamp}] ‚úÖ –ß–∞—Ç –Ω–∞–π–¥–µ–Ω:`, chat)
			}

			// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
			const whatsappMessage = new WhatsappMessage({
				isEcho: message.fromMe,
				text: message.body,
				whatsappChatId: chat._id,
				isClosed: false, // –°–¥–µ–ª–∫–∞ –µ—â–µ –Ω–µ –∑–∞–∫—Ä—ã—Ç–∞
			})

			try {
				await whatsappMessage.save() // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑–µ
				console.log(`[${timestamp}] ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:`, whatsappMessage)
			} catch (error) {
				console.error(
					`[${timestamp}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:`,
					error
				)
				return // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
			}

			// –û—Ç–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–µ—Ä –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞
			if (this.activeTimers.has(message.to)) {
				console.log(`[${timestamp}] üõë –û—Ç–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è ${message.to}`)
				clearTimeout(this.activeTimers.get(message.to))
				this.activeTimers.delete(message.to)
				console.log(`[${timestamp}] ‚úÖ –¢–∞–π–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω`)
			}
		} catch (error) {
			console.error(
				`[${new Date().toISOString()}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:`,
				error
			)
		}
	}
}
