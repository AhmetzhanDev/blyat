import { Request, Response } from 'express';
import { WhatsAppAccountModel } from '../models/WhatsAppAccount';
import { CompanySettings } from '../models/CompanySettings';
import { MessageMonitor } from '../services/messageMonitor';

const messageMonitor = MessageMonitor.getInstance();

export const handleIncomingMessage = async (req: Request, res: Response): Promise<void> => {
  try {
    const { from, body, companyId } = req.body;
    const startTime = new Date();

    console.log(`[${startTime.toISOString()}] üì± –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${body}" –æ—Ç: ${from}`);

    if (!from || !body || !companyId) {
      console.log(`[${new Date().toISOString()}] ‚ùå –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è`);
      console.log(`[${new Date().toISOString()}] üìù –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:`, { from, body, companyId });
      res.status(400).json({ error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å from, body –∏ companyId' });
      return;
    }

    // –ù–∞—Ö–æ–¥–∏–º –∞–∫–∫–∞—É–Ω—Ç WhatsApp
    console.log(`[${new Date().toISOString()}] üîç –ü–æ–∏—Å–∫ –∞–∫–∫–∞—É–Ω—Ç–∞ WhatsApp –¥–ª—è –Ω–æ–º–µ—Ä–∞: ${from}`);
    const account = await WhatsAppAccountModel.findOne({ phoneNumber: from });
    if (!account) {
      console.log(`[${new Date().toISOString()}] ‚ùå –û—à–∏–±–∫–∞: –∞–∫–∫–∞—É–Ω—Ç WhatsApp –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –Ω–æ–º–µ—Ä–∞ ${from}`);
      res.status(404).json({ error: '–ê–∫–∫–∞—É–Ω—Ç WhatsApp –Ω–µ –Ω–∞–π–¥–µ–Ω' });
      return;
    }
    console.log(`[${new Date().toISOString()}] ‚úÖ –ê–∫–∫–∞—É–Ω—Ç WhatsApp –Ω–∞–π–¥–µ–Ω:`, account.companyName);

    // –ù–∞—Ö–æ–¥–∏–º –∫–æ–º–ø–∞–Ω–∏—é
    console.log(`[${new Date().toISOString()}] üîç –ü–æ–∏—Å–∫ –∫–æ–º–ø–∞–Ω–∏–∏ —Å ID: ${companyId}`);
    const companySettings = await CompanySettings.findOne({ 'companies.id': companyId });
    if (!companySettings) {
      console.log(`[${new Date().toISOString()}] ‚ùå –û—à–∏–±–∫–∞: –∫–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Å ID ${companyId}`);
      res.status(404).json({ error: '–ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
      return;
    }
    console.log(`[${new Date().toISOString()}] ‚úÖ –ö–æ–º–ø–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞:`, companySettings.companies.find(c => c.id === companyId)?.nameCompany);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞
    console.log(`[${new Date().toISOString()}] üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç ${from}`);
    await messageMonitor.startMonitoring(from, body, companyId);
    console.log(`[${new Date().toISOString()}] ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç ${from}`);

    const endTime = new Date();
    const processingTime = endTime.getTime() - startTime.getTime();
    console.log(`[${endTime.toISOString()}] ‚è±Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${processingTime}–º—Å`);

    res.status(200).json({ 
      message: '–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω',
      details: {
        from,
        companyId,
        processingTime: `${processingTime}–º—Å`
      }
    });
  } catch (error) {
    console.error(`[${new Date().toISOString()}] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:`, error);
    console.error(`[${new Date().toISOString()}] üìù –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:`, req.body);
    res.status(500).json({ 
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    });
  }
};

export const handleOutgoingMessage = async (req: Request, res: Response): Promise<void> => {
  try {
    const { to, companyId } = req.body;
    const startTime = new Date();

    console.log(`[${startTime.toISOString()}] üì± –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è ${to}`);

    if (!to || !companyId) {
      console.log(`[${new Date().toISOString()}] ‚ùå –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è`);
      console.log(`[${new Date().toISOString()}] üìù –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:`, { to, companyId });
      res.status(400).json({ error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å to –∏ companyId' });
      return;
    }

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, —Ç–∞–∫ –∫–∞–∫ –æ—Ç–≤–µ—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
    console.log(`[${new Date().toISOString()}] üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –∫ ${to}`);
    messageMonitor.stopMonitoring(to, companyId);
    console.log(`[${new Date().toISOString()}] ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –∫ ${to}`);

    const endTime = new Date();
    const processingTime = endTime.getTime() - startTime.getTime();
    console.log(`[${new Date().toISOString()}] ‚è±Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${processingTime}–º—Å`);

    res.status(200).json({ 
      message: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
      details: {
        to,
        companyId,
        processingTime: `${processingTime}–º—Å`
      }
    });
  } catch (error) {
    console.error(`[${new Date().toISOString()}] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:`, error);
    console.error(`[${new Date().toISOString()}] üìù –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:`, req.body);
    res.status(500).json({ 
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    });
  }
}; 