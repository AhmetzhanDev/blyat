#!/usr/bin/env node
const fs = require('fs')
const path = require('path')
const dotenv = require('dotenv')
const mongoose = require('mongoose')

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: path.join(process.cwd(), '.env') })

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å (–Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å TS –≤ JS —Å–Ω–∞—á–∞–ª–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å require –¥–ª—è JS –≤–µ—Ä—Å–∏–∏)
// –î–ª—è —Ä–∞–±–æ—Ç—ã —Å TypeScript –º–æ–¥–µ–ª—è–º–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º require —Å ts-node
require('ts-node/register')
const { CompanySettings } = require('../src/models/CompanySettings')

// –ü–∞–ø–∫–∞ —Å —Å–µ—Å—Å–∏—è–º–∏
const SESSIONS_DIR = path.join(process.cwd(), '.wwebjs_auth')

// –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è —É–¥–∞–ª—è—Ç—å
const PROTECTED_SESSIONS = [
  'admin',
  'Default'  // –¢–∞–∫–∂–µ –∞–¥–º–∏–Ω—Å–∫–∞—è —Å–µ—Å—Å–∏—è
]

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
 */
const getAllSessions = () => {
  if (!fs.existsSync(SESSIONS_DIR)) {
    console.log('üìÇ –ü–∞–ø–∫–∞ —Å —Å–µ—Å—Å–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', SESSIONS_DIR)
    return []
  }

  const sessions = []
  const items = fs.readdirSync(SESSIONS_DIR)

  for (const item of items) {
    const fullPath = path.join(SESSIONS_DIR, item)
    
    try {
      const stats = fs.statSync(fullPath)
      
      if (stats.isDirectory()) {
        const sessionInfo = {
          sessionName: item,
          fullPath,
          isCompanySession: false
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–µ—Å—Å–∏–µ–π –∫–æ–º–ø–∞–Ω–∏–∏
        if (item.startsWith('session-company-')) {
          sessionInfo.isCompanySession = true
          sessionInfo.companyId = item.replace('session-company-', '')
        }

        sessions.push(sessionInfo)
      }
    } catch (error) {
      console.warn(`‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ ${item}:`, error.message)
    }
  }

  return sessions
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π –∏–∑ –ë–î
 */
const getActiveCompanies = async () => {
  try {
    const companies = await CompanySettings.find({}, { _id: 1 }).lean()
    return companies.map(company => company._id.toString())
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–π –∏–∑ –ë–î:', error)
    return []
  }
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª—è–µ—Ç –ø–∞–ø–∫—É —Å —Å–µ—Å—Å–∏–µ–π
 */
const deleteSession = (sessionPath) => {
  try {
    if (fs.existsSync(sessionPath)) {
      fs.rmSync(sessionPath, { recursive: true, force: true })
      console.log('üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∞ —Å–µ—Å—Å–∏—è:', sessionPath)
      return true
    }
    return false
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏:', sessionPath, error)
    return false
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–π
 */
const cleanupSessions = async () => {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Å–µ—Å—Å–∏–π WhatsApp...')
    console.log('üìÇ –ü–∞–ø–∫–∞ —Å —Å–µ—Å—Å–∏—è–º–∏:', SESSIONS_DIR)

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    const mongoUri = process.env.MONGO_URI || 'mongodb://localhost:27017/monitoring'
    await mongoose.connect(mongoUri)
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏ –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    const allSessions = getAllSessions()
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π –≤ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ: ${allSessions.length}`)

    if (allSessions.length === 0) {
      console.log('‚ú® –ù–µ—Ç —Å–µ—Å—Å–∏–π –¥–ª—è –æ—á–∏—Å—Ç–∫–∏')
      return
    }

    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∏–∑ –ë–î
    const activeCompanies = await getActiveCompanies()
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π –≤ –ë–î: ${activeCompanies.length}`)

    let deletedCount = 0
    let protectedCount = 0
    let keptCount = 0

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ—Å—Å–∏—é
    for (const session of allSessions) {
      console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏—é: ${session.sessionName}`)

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
      if (PROTECTED_SESSIONS.includes(session.sessionName)) {
        console.log(`üõ°Ô∏è  –ó–∞—â–∏—â–µ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è (–∞–¥–º–∏–Ω—Å–∫–∞—è): ${session.sessionName}`)
        protectedCount++
        continue
      }

      // –ï—Å–ª–∏ —ç—Ç–æ —Å–µ—Å—Å–∏—è –∫–æ–º–ø–∞–Ω–∏–∏
      if (session.isCompanySession && session.companyId) {
        const companyExists = activeCompanies.includes(session.companyId)
        
        if (companyExists) {
          console.log(`‚úÖ –ö–æ–º–ø–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î: ${session.companyId}`)
          keptCount++
        } else {
          console.log(`‚ùå –ö–æ–º–ø–∞–Ω–∏—è –ù–ï –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î: ${session.companyId}`)
          console.log(`üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é: ${session.sessionName}`)
          
          if (deleteSession(session.fullPath)) {
            deletedCount++
          }
        }
      } else {
        // –ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è - —É–¥–∞–ª—è–µ–º —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é
        console.log(`‚ö†Ô∏è  –ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è: ${session.sessionName}`)
        console.log(`üîç –ü—É—Ç—å: ${session.fullPath}`)
        
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –¥–ª—è —Ç–∞–∫–∏—Ö —Å–µ—Å—Å–∏–π
        // –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        console.log(`‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—É—é —Å–µ—Å—Å–∏—é`)
        keptCount++
      }
    }

    // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\n' + '='.repeat(50))
    console.log('üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
    console.log(`üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ —Å–µ—Å—Å–∏–π: ${deletedCount}`)
    console.log(`üõ°Ô∏è  –ó–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π: ${protectedCount}`)
    console.log(`‚úÖ –û—Å—Ç–∞–≤–ª–µ–Ω–æ —Å–µ—Å—Å–∏–π: ${keptCount}`)
    console.log(`üìÇ –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${allSessions.length}`)
    console.log('='.repeat(50))

    if (deletedCount > 0) {
      console.log('\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π')
    }

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–µ—Å—Å–∏–π:', error)
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
    await mongoose.disconnect()
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ')
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏—è—Ö –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è
 */
const listSessions = async () => {
  try {
    console.log('üìä –ê–Ω–∞–ª–∏–∑ —Å–µ—Å—Å–∏–π WhatsApp...')
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    const mongoUri = process.env.MONGO_URI || 'mongodb://localhost:27017/monitoring'
    await mongoose.connect(mongoUri)

    const allSessions = getAllSessions()
    const activeCompanies = await getActiveCompanies()

    console.log('\n' + '='.repeat(60))
    console.log('üìÇ –ê–ù–ê–õ–ò–ó –°–ï–°–°–ò–ô:')
    console.log('='.repeat(60))

    for (const session of allSessions) {
      console.log(`\nüìÅ –°–µ—Å—Å–∏—è: ${session.sessionName}`)
      console.log(`üìç –ü—É—Ç—å: ${session.fullPath}`)

      if (PROTECTED_SESSIONS.includes(session.sessionName)) {
        console.log(`üõ°Ô∏è  –°—Ç–∞—Ç—É—Å: –ó–ê–©–ò–©–ï–ù–ù–ê–Ø (–∞–¥–º–∏–Ω—Å–∫–∞—è)`)
      } else if (session.isCompanySession && session.companyId) {
        const exists = activeCompanies.includes(session.companyId)
        console.log(`üè¢ ID –∫–æ–º–ø–∞–Ω–∏–∏: ${session.companyId}`)
        console.log(`üìä –°—Ç–∞—Ç—É—Å: ${exists ? '‚úÖ –ê–ö–¢–ò–í–ù–ê–Ø' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–ê –í –ë–î'}`)
      } else {
        console.log(`‚ùì –°—Ç–∞—Ç—É—Å: –ù–ï–û–ü–û–ó–ù–ê–ù–ù–ê–Ø`)
      }
    }

    console.log('\n' + '='.repeat(60))
    console.log(`üìä –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: ${allSessions.length}`)
    console.log(`üè¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π –≤ –ë–î: ${activeCompanies.length}`)
    console.log('='.repeat(60))

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å–µ—Å—Å–∏–π:', error)
  } finally {
    await mongoose.disconnect()
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
const main = async () => {
  const args = process.argv.slice(2)
  const command = args[0]

  switch (command) {
    case 'list':
    case 'analyze':
      await listSessions()
      break
    case 'clean':
    case 'cleanup':
      await cleanupSessions()
      break
    default:
      console.log('üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:')
      console.log('  node scripts/cleanup-sessions.js list     - –ü–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏–∑ —Å–µ—Å—Å–∏–π')
      console.log('  node scripts/cleanup-sessions.js clean    - –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–µ—Å—Å–∏–∏')
      console.log('')
      console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å analyze –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞')
      break
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  main().catch(error => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  })
}

module.exports = { cleanupSessions, listSessions } 